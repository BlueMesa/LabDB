<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class MpiCbgFliesBundleEntityFlyCrossProxy extends \MpiCbg\FliesBundle\Entity\FlyCross implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function getName()
    {
        $this->_load();
        return parent::getName();
    }

    public function getLabel()
    {
        $this->_load();
        return parent::getLabel();
    }

    public function setMale(\MpiCbg\FliesBundle\Entity\FlyVial $male)
    {
        $this->_load();
        return parent::setMale($male);
    }

    public function getMale()
    {
        $this->_load();
        return parent::getMale();
    }

    public function setMaleName($maleName)
    {
        $this->_load();
        return parent::setMaleName($maleName);
    }

    public function getMaleName()
    {
        $this->_load();
        return parent::getMaleName();
    }

    public function setVirgin(\MpiCbg\FliesBundle\Entity\FlyVial $virgin)
    {
        $this->_load();
        return parent::setVirgin($virgin);
    }

    public function getVirgin()
    {
        $this->_load();
        return parent::getVirgin();
    }

    public function setVirginName($virginName)
    {
        $this->_load();
        return parent::setVirginName($virginName);
    }

    public function getVirginName()
    {
        $this->_load();
        return parent::getVirginName();
    }

    public function setVial(\MpiCbg\FliesBundle\Entity\FlyVial $vial)
    {
        $this->_load();
        return parent::setVial($vial);
    }

    public function getVial()
    {
        $this->_load();
        return parent::getVial();
    }

    public function getStocks()
    {
        $this->_load();
        return parent::getStocks();
    }

    public function getCrosses()
    {
        $this->_load();
        return parent::getCrosses();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'male', 'maleName', 'virgin', 'virginName', 'vial', 'stocks');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}